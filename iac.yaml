AWSTemplateFormatVersion: 2010-09-09
Description: Build a stack that creates EC2 Instances with mySQL database
Resources:
  myWebAppDBInstance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-0d5eff06f840b45e9
      InstanceType: t2.micro
      KeyName: ####string
      SecurityGroupIds:
        - !Ref WebAppAndDBSecurityGroup
      Tags:
        - Key: Name
          Value: !Join ["-", [myWebAppDB, prod]]

  MysqlDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: ##string
      Engine: mysql
      MasterUsername: ####string
      DBInstanceClass: db.t3.micro
      DBSecurityGroups:
        - Ref: DBSecurityGroup
      AllocatedStorage: 20
      LicenseModel: "general-public-license"
      MasterUserPassword: ##string
      PubliclyAccessible: false
      StorageType: standard
      Tags:
        - Key: Name
          Value: !Join ["-", [myWebDB, dev]]
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: "A secure MySQL DataBase"
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: WebAppAndDBSecurityGroup
  WebAppAndDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['-',[secureweb-andDB-group, prod]] 
      GroupDescription: "Enable HTTP/HTTPS and SSH Inbound and Outbound Traffic"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0


  AppDBeip:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
      InstanceId: !Ref myWebAppDBInstance
      Tags:
        - Key: Name
          Value: !Join ['-', [AppDB-eip, prod]]

Outputs:
  WebsiteURL: 
    Value: !Sub http://${AppDBeip}
    Description: Web App URL